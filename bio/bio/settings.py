"""
Django settings for bio project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ
import os
import ipaddress

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()
environ.Env.read_env(env_file=str(BASE_DIR / '.env'))
TEMPLATES_DIR = BASE_DIR / 'bio/templates'

# Session configs
SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'
SESSION_COOKIE_HTTPONLY = True
X_FRAME_OPTIONS = 'SAMEORIGIN'
SILENCED_SYSTEM_CHECKS = ["security.W019"]

# Base URL and HTTPS Enabled
BASE_URL = env.str('BASE_URL', 'http://127.0.0.1:8080/')
SERVE_HTTPS = env.bool('SERVE_HTTPS', False)
if SERVE_HTTPS:
    # COOKIES
    CSRF_COOKIE_HTTPONLY = True
    SESSION_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
else:
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.bool('SECRET_KEY', 'django-insecure-7l1jw%%4nhgb)xui2q=(l#^s69d46asp3y(9p_r2*f*#4@d2r0')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', False)

# Allowed hosts
ALLOWED_HOSTS = []
CSRF_TRUSTED_ORIGINS = []
new_host = env.str('ALLOW_HOST', '127.0.0.1')
try:
    ip = ipaddress.ip_address(new_host)
    ALLOWED_HOSTS.append(new_host)
    CSRF_TRUSTED_ORIGINS.append('https://' + new_host)
except Exception as e:
    ALLOWED_HOSTS.append(new_host)
    if not 'www' in new_host:
        ALLOWED_HOSTS.append('www.' + new_host)
        CSRF_TRUSTED_ORIGINS.append('https://www.' + new_host)
    else:
        try:
            ALLOWED_HOSTS.append(new_host.split('www.')[1])
            CSRF_TRUSTED_ORIGINS.append('https://' + new_host.split('www.')[1])
        except Exception as e1:
            pass

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_L18N = True
USE_L10N = True
LOCALE_PATHS = [os.path.join(BASE_DIR, 'locales')]
USE_THOUSAND_SEPARATOR = True

# Email
SEND_EMAIL = env.bool('SEND_EMAIL', False)
if SEND_EMAIL:
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
    EMAIL_HOST = env.str("EMAIL_HOST") 
    EMAIL_HOST_PASSWORD = env.str("EMAIL_HOST_PASSWORD")
    EMAIL_HOST_USER = env.str("EMAIL_HOST_USER")
    EMAIL_PORT = env.int('EMAIL_PORT', 465)
    EMAIL_SUBJECT_PREFIX = "[eTimbre] "
    EMAIL_USE_LOCALTIME = True
    EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS", False)
    EMAIL_USE_SSL = env.bool("EMAIL_USE_SSL", True)
    SERVER_EMAIL = env.str("SERVER_EMAIL", EMAIL_HOST_USER)
    DEFAULT_FROM_EMAIL=env.str("DEFAULT_FROM_EMAIL", SERVER_EMAIL)
else:
    EMAIL_HOST_USER = ''
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'import_export',
    'django_countries',
    'tinymce',
    'qr_code',
    'djmoney',
    'compressor',
    'django_jsonform',
    # APPS
    'core',
    'academia',
    'research',
    'industry',
    'web',
]

AUTH_USER_MODEL = "core.User"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = "bio.urls"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = "bio.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

SQLITE_DB = env.bool('SQLITE_DB', False)

if SQLITE_DB:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": env.str("DB_NAME", 'bio'),
            "USER": env.str("DB_USER_NAME", 'bio'),
            "PASSWORD": env.str("DB_USER_PASSWORD", 'bio'),
            "HOST": env.str("DB_HOST", 'localhost'),
            "PORT": env.str("DB_PORT", '3306'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Content Security Policy
CSP_IMG_SRC = ("'self' blob: data:;", )
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'", 'https://fonts.googleapis.com', 'https://cdnjs.cloudflare.com', 'https://cdn.jsdelivr.net', 'https://use.fontawesome.com')
CSP_SCRIPT_SRC = ("'self'", "'unsafe-inline'", 'https://ajax.googleapis.com', 'https://buttons.github.io', 'https://stackpath.bootstrapcdn.com', 'https://cdnjs.cloudflare.com')
CSP_WORKER_SRC = ("'self' blob: data:;", )
CSP_FONT_SRC = ("'self'", 'https://fonts.gstatic.com/', 'https://use.fontawesome.com')
CSP_FRAME_SRC = ("'self'", )
CSP_CONNECT_SRC = ("'self'", 'https://www.google.com')
CSP_INCLUDE_NONCE_IN = ['script-src', 'style-src']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "bio/static"]

MEDIA_ROOT = BASE_DIR / "mediafiles"
MEDIA_URL = "/media/"

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)

COMPRESS_PRECOMPILERS = (
    ('text/x-scss', 'django_libsass.SassCompiler'),
)

TINYMCE_DEFAULT_CONFIG = {
    "theme": "silver",
    "height": 320,
    "menubar": False,
    "plugins": "advlist,autolink,lists,link,image,charmap,print,preview,anchor,"
    "searchreplace,visualblocks,code,fullscreen,insertdatetime,media,table,paste,"
    "code,help,wordcount",
    "toolbar": "undo redo | formatselect | "
    "bold italic backcolor | alignleft aligncenter "
    "alignright alignjustify | bullist numlist outdent indent | "
    "removeformat | help",
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
